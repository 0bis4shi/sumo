diff --git a/tools/contributed/lisum/src/main/java/de/dlr/ts/lisum/simulation/SimulationControlUnits.java b/tools/contributed/lisum/src/main/java/de/dlr/ts/lisum/simulation/SimulationControlUnits.java
index d169614..c481a33 100644
--- a/tools/contributed/lisum/src/main/java/de/dlr/ts/lisum/simulation/SimulationControlUnits.java
+++ b/tools/contributed/lisum/src/main/java/de/dlr/ts/lisum/simulation/SimulationControlUnits.java
@@ -31,6 +31,7 @@ public class SimulationControlUnits
 {
     private final Map<String /*Sumo*/, SimuControlUnit> perSumo = new HashMap<>();
     private final Map<String /*City*/, String /*Sumo*/> perCity = new HashMap<>();
+    private final Map<String /*complexCode*/, LightColor> complexCodes = new HashMap<>();
     
     
     /**
@@ -71,6 +72,29 @@ public class SimulationControlUnits
                 controlUnitInter.setEnabled(true);
             }
         }
+
+        complexCodes.put("rO", LightColor.RED);
+        complexCodes.put("Or", LightColor.RED);
+        complexCodes.put("ro", LightColor.RED);
+        complexCodes.put("Go", LightColor.DARK_GREEN);
+        complexCodes.put("go", LightColor.DARK_GREEN);
+        complexCodes.put("gO", LightColor.DARK_GREEN);
+        complexCodes.put("OG", LightColor.GREEN);
+        complexCodes.put("Gr", LightColor.GREEN);
+        complexCodes.put("GO", LightColor.GREEN);
+
+        complexCodes.put("rro", LightColor.RED);
+        complexCodes.put("rrO", LightColor.RED);
+        complexCodes.put("rGo", LightColor.RED);
+        complexCodes.put("rGO", LightColor.RED);
+        complexCodes.put("rOO", LightColor.RED);
+        complexCodes.put("roO", LightColor.RED);
+        complexCodes.put("OGo", LightColor.DARK_GREEN);
+        complexCodes.put("GoO", LightColor.DARK_GREEN);
+        complexCodes.put("goO", LightColor.DARK_GREEN);
+        complexCodes.put("GoG", LightColor.GREEN);
+        complexCodes.put("GOG", LightColor.GREEN);
+
     }    
     
     /**
@@ -94,7 +118,7 @@ public class SimulationControlUnits
      */
     private static class SimuControlUnit
     {
-        private final Map<Integer, SignalGroup> signalGroups = new HashMap<>();
+        private final Map<Integer, ArrayList<SignalGroup> > signalGroups = new HashMap<>();
         private final ControlUnitInterface cui;
 
         
@@ -114,12 +138,20 @@ public class SimulationControlUnits
          */
         LightColor getColor(int signalGroupIndex)
         {
-            SignalGroup sg = signalGroups.get(signalGroupIndex);
+            ArrayList<SignalGroup> sgs = signalGroups.get(signalGroupIndex);
 
-            if(sg == null)
+            if(sgs == null || sgs.isEmpty())
                 return LightColor.OFF;
             
-            LightColor lightColor = cui.getLightColor(sg.lisa);
+            String complexCode = "";
+            for (SignalGroup sg : sgs) {
+                complexCode += cui.getLightColor(sg.lisa).getSumoCode();
+            }
+
+            LightColor lightColor = complexCodes.get(complexCode);
+            if (lightColor == null) {
+                return LightColor.OFF;
+            }
             
             if(lightColor == LightColor.OFF)
                 if(sg.ifOff != null)
@@ -141,7 +173,7 @@ public class SimulationControlUnits
                 String[] split = string.split(",");
                 
                 for (String s : split)
-                    signalGroups.put(Integer.valueOf(s), new SignalGroup(sg.lisa, sg.ifOff));
+                    signalGroups.get(Integer.valueOf(s)).add(new SignalGroup(sg.lisa, sg.ifOff));
             }
         }
         
diff --git a/tools/contributed/lisum/src/main/java/de/dlr/ts/lisum/sumo/SumoControlUnit.java b/tools/contributed/lisum/src/main/java/de/dlr/ts/lisum/sumo/SumoControlUnit.java
index 349faea..9f31a99 100644
--- a/tools/contributed/lisum/src/main/java/de/dlr/ts/lisum/sumo/SumoControlUnit.java
+++ b/tools/contributed/lisum/src/main/java/de/dlr/ts/lisum/sumo/SumoControlUnit.java
@@ -1,4 +1,4 @@
-/** ************************************************************************* */
+/****************************************************************************/
 // Eclipse SUMO, Simulation of Urban MObility; see https://eclipse.org/sumo
 // Copyright (C) 2016-2018 German Aerospace Center (DLR) and others.
 // This program and the accompanying materials
@@ -6,14 +6,14 @@
 // which accompanies this distribution, and is available at
 // http://www.eclipse.org/legal/epl-v20.html
 // SPDX-License-Identifier: EPL-2.0
-/** ************************************************************************* */
+/****************************************************************************/
 /// @file    Constants.java
 /// @author  Maximiliano Bottazzi
 /// @date    2016
 /// @version $Id$
 ///
 //
-/** ************************************************************************* */
+/****************************************************************************/
 package de.dlr.ts.lisum.sumo;
 
 import de.dlr.ts.lisum.enums.LightColor;
@@ -28,8 +28,7 @@ import java.util.logging.Logger;
 
 /**
  *
- * @author @author <a href="mailto:maximiliano.bottazzi@dlr.de">Maximiliano
- * Bottazzi</a>
+ * @author @author <a href="mailto:maximiliano.bottazzi@dlr.de">Maximiliano Bottazzi</a>
  */
 class SumoControlUnit {
 
@@ -50,6 +49,7 @@ class SumoControlUnit {
         int phasesCount = sumoStrings[0].length();
 
         for (int i = 0; i < phasesCount; i++) {
+            /*
             String nodeLine = extractStates(i, sumoStrings);
 
             char greenType = 'G';
@@ -59,8 +59,9 @@ class SumoControlUnit {
                     greenType = 'g';
                 }
             }
+            */
 
-            SignalGroup sg = new SignalGroup(greenType);
+            SignalGroup sg = new SignalGroup();
             signalGroups.add(sg);
         }
     }
@@ -157,14 +158,12 @@ class SumoControlUnit {
      */
     public static class SignalGroup {
 
-        private char green = 'G';
         private LightColor currentLightColor = LightColor.OFF;
 
         /**
          *
          */
-        public SignalGroup(char green) {
-            this.green = green;
+        public SignalGroup() {
         }
 
         /**
@@ -180,10 +179,6 @@ class SumoControlUnit {
          * @return
          */
         public char getSumoCurrentLightColor() {
-            if (currentLightColor.isGreen()) {
-                return green;
-            }
-
             return currentLightColor.getSumoCode();
         }
     }
